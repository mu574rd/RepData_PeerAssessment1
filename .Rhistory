str(data)
data <- read.csv('activity.csv', header = TRUE, sep=",",
colClasses=c("numeric", "character", "numeric"))
names(data)
str(data)
head(data)
data <- read.csv('activity.csv', header = TRUE, sep=",",
colClasses=c("numeric", "character", "numeric"))
names(data)
data <- read.csv('activity.csv', header = TRUE, sep=",",
colClasses=c("numeric", "character", "numeric"))
names(data)
str(data)
head(data)
steps.per.day <- aggregate(data$steps, by=data$date, FUN=sum, na.rm=TRUE)
hist(steps.per.day$steps,
breaks=20,
col = "orange",
main = "Total Number of Steps Taken per Day",
xlab = "Day",
ylab = "Number of Steps")
steps.per.day <- aggregate(steps~date, FUN=sum, na.rm=TRUE)
steps.per.day <- aggregate(steps~date, data=data, FUN=sum, na.rm=TRUE)
hist(steps.per.day$steps,
breaks=20,
col = "orange",
main = "Total Number of Steps Taken per Day",
xlab = "Day",
ylab = "Number of Steps")
data <- read.csv('activity.csv', header = TRUE, sep=",", colClasses=c("numeric", "character", "numeric"))
data$date <- as.Date(data$date)
steps.per.day <- aggregate(steps~date, data=data, FUN=sum, na.rm=TRUE)
hist(steps.per.day$steps,
breaks=20,
col = "orange",
main = "Total Number of Steps Taken per Day",
xlab = "Day",
ylab = "Number of Steps")
mean(steps.per.day$steps)
median(steps.per.day$steps)
steps.pattern <- aggregate(data$steps, by=data$date, data=data, FUN=mean, na.rm=TRUE)
plot(interval~steps,
type="l",
main="Average Steps Per Interval",
xlab="Interval",
ylab="Number of Steps")
steps.pattern <- aggregate(steps~date, data=data, FUN=mean, na.rm=TRUE)
plot(interval~steps,
type="l",
main="Average Steps Per Interval",
xlab="Interval",
ylab="Number of Steps")
steps.pattern <- aggregate(steps~date, data=data, FUN=mean, na.rm=TRUE)
plot(interval~steps, data=data,
type="l",
main="Average Steps Per Interval",
xlab="Interval",
ylab="Number of Steps")
steps.pattern <- aggregate(steps~date, data=data, FUN=mean, na.rm=TRUE)
plot(steps~interval, data=data,
type="l",
main="Average Steps Per Interval",
xlab="Number of Steps",
ylab="Interval")
max.steps <- steps.pattern[which.max(steps.pattern$steps),]$interval
nrow(data)
sum(is.na(data$steps))
install.packages("plyr")
library(plyr)
no.ma.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
new.data <- ddply(data, ~interval, transform, steps =no.ma.mean(steps))
new.data.date <- aggregate(steps~date, FUN=sum, na.rm=TRUE)
hist(new.data.date$steps,
breaks=20,
col = "orange",
main = "Total Number of Steps Taken per Day (From the New Data Set)",
xlab = "Steps per Day")
new.data.date <- aggregate(steps~date, new.data, FUN=sum, na.rm=TRUE)
hist(new.data.date$steps,
breaks=20,
col = "orange",
main = "Total Number of Steps Taken per Day (From the New Data Set)",
xlab = "Steps per Day")
new.data.date <- aggregate(steps~date, data=new.data, FUN=sum, na.rm=TRUE)
hist(new.data.date$steps,
breaks=20,
col = "orange",
main = "Total Number of Steps Taken per Day (From the New Data Set)",
xlab = "Steps per Day")
mean(new.data.date$steps)
median(new.data.date$steps)
new.data$datecorrect <- as.POSIXlt(new.data$date,format="%Y-%m-%d")
new.data$day <- "Weekday"
new.data$day [weekdays(new.data$datecorrect) %in% c("Saturday","Sunday")] <- "Weekend"
new.data.interval <- aggregate(new.data$steps, by=new.data[c(3,5)], FUN=mean, na.rm=TRUE)
library(ggplot2)
plot <- ggplot(data = new.data.interval, aes(x=interval,y=steps))
plot + geom_line() + facet_wrap(~day,nrow=2)
new.data.interval <- aggregate(new.data$steps, by=new.data[c(3,5)], FUN=mean, na.rm=TRUE)
library(ggplot2)
plot <- ggplot(data = new.data.interval, aes(x=new.data$interval,y=new.data$steps))
plot + geom_line() + facet_wrap(~day,nrow=2)
data <- read.csv('activity.csv', header = TRUE, sep=",", colClasses=c("numeric", "character", "numeric"))
steps.per.day <- aggregate(steps~date, data=data, FUN=sum, na.rm=TRUE)
hist(steps.per.day,
binwidth=1000,
col = "orange",
xlab = "Total Number of Steps Taken per Day")
mean(steps.per.day$steps)
median(steps.per.day$steps)
steps.per.day <- aggregate(steps~date, data=data, FUN=sum, na.rm=TRUE)
steps.per.day <- as.numeric(steps.per.day)
hist(steps.per.day,
binwidth=1000,
col = "orange",
xlab = "Total Number of Steps Taken per Day")
mean(steps.per.day$steps)
median(steps.per.day$steps)
steps.per.day <- aggregate(steps~date, data=data, FUN=sum, na.rm=TRUE)
hist(data$steps,
binwidth=1000,
col = "orange",
xlab = "Total Number of Steps Taken per Day")
steps.per.day <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
hist(steps.per.day,
col = "orange",
xlab = "Total Number of Steps Taken per Day")
unzip(zipfile="activity.zip")
data <- read.csv('activity.csv', header = TRUE, sep=",", colClasses=c("numeric", "character", "numeric"))
data$date <- as.Date(data$date)
names(data)
str(data)
head(data)
steps.per.day <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
hist(steps.per.day,
col = "orange",
xlab = "Total Number of Steps Taken per Day")
mean(steps.per.day$steps)
median(steps.per.day$steps)
mean(steps.per.day)
median(steps.per.day)
steps.pattern <- aggregate(x = list(steps=data$steps), by = list(interval=data$interval),
FUN=mean, na.rm=TRUE)
plot(steps.pattern, data=steps.pattern,
type="l",
main="Average Steps Per Interval",
xlab="Number of Steps",
ylab="Interval")
plot(steps.pattern,
type="l",
main="Average Steps Per Interval",
xlab="Number of Steps",
ylab="Interval")
steps.pattern <- aggregate(x = list(steps=data$steps), by = list(interval=data$interval),
FUN=mean, na.rm=TRUE)
plot(steps.pattern$interval, steps.pattern,
type="l",
main="Average Steps Per Interval",
xlab="Interval",
ylab="Average Steps")
plot(steps.pattern$interval, steps.pattern$steps,
type="l",
main="Average Steps Per Interval",
xlab="Interval",
ylab="Average Steps")
max.steps <- steps.pattern[which.max(steps.pattern$steps),]$interval
nrow(data)
sum(is.na(data$steps))
no.ma <- function(steps, interval) {
new.value <- NA
if (!is.na(steps))
new.value <- c(steps)
else
new.value <- (steps.pattern[steps.pattern$interval==interval, "steps"])
return(new.value)
}
new.data <- data
new.data$steps <- mapply(no.ma, new.data$steps, new.data$interval)
new.totals <- tapply(new.data$steps, new.data$date, FUN=sum)
hist(new.totals,
breaks=20,
col = "orange",
xlab = "Total Number of Steps Taken per Day (From the New Data Set)")
mean(new.totals)
median(new.totals)
new.data$datecorrect <- as.POSIXlt(new.data$date,format="%Y-%m-%d")
new.data$day <- "Weekday"
new.data$day [weekdays(new.data$datecorrect) %in% c("Saturday","Sunday")] <- "Weekend"
steps.pattern <- aggregate(steps~interval + day, data=new.data, mean)
library(ggplot2)
plot <- ggplot(steps.pattern, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
plot
?knit2html()
?knit2html
install.packages("knitr")
?knit2html
library(knitr)
?"knit2html"
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
steps.pattern <- aggregate(steps~interval + day, data=new.data, mean)
library(ggplot2)
plot <- ggplot(steps.pattern, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
plot
steps.pattern <- aggregate(steps~interval + day, data=new.data, mean)
library(ggplot2)
plot <- ggplot(steps.pattern, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
new.data$date <- as.POSIXlt(new.data$date,format="%Y-%m-%d")
new.data$day <- "Weekday"
new.data$day [weekdays(new.data$date) %in% c("Saturday","Sunday")] <- "Weekend"
steps.pattern <- aggregate(steps~interval + day, data=new.data, mean)
library(ggplot2)
plot <- ggplot(steps.pattern, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
plot <- ggplot(data = steps.pattern, aes(x=interval,y=steps))
plot + geom_line() + facet_wrap(~day,nrow=2)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
